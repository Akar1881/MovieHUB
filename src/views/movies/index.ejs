<%- include('../partials/header') %>

<div class="container">
    <h1>Movies</h1>
    
    <div class="page-search">
        <input type="text" id="page-search-input" class="page-search-input" placeholder="Search movies...">
        <div class="filter-controls">
            <select id="sort-select" class="filter-select">
                <option value="latest">Latest</option>
                <option value="oldest">Oldest</option>
                <option value="rating">Highest Rated</option>
                <option value="views">Most Viewed</option>
            </select>
            <select id="type-select" class="filter-select">
                <option value="all">All Types</option>
                <option value="movie">Movies</option>
                <option value="anime">Anime Movies</option>
            </select>
            <select id="genre-select" class="filter-select">
                <option value="all">All Genres</option>
                <% ['Action', 'Comedy', 'Horror', 'Drama', 'Thriller', 'Romance', 
                    'Sci-Fi', 'Fantasy', 'Adventure', 'Crime', 'Mystery', 'Documentary',
                    'Animation', 'Family', 'Historical', 'Musical', 'Superhero', 
                    'Reality TV', 'Sports', 'Art House'].forEach(genre => { %>
                    <option value="<%= genre %>"><%= genre %></option>
                <% }); %>
            </select>
        </div>
    </div>

    <div class="content-grid">
        <% movies.forEach(movie => { %>
            <div class="content-card" 
                 data-rating="<%= movie.avgRating || 0 %>" 
                 data-views="<%= movie.watchCount || 0 %>"
                 data-date="<%= movie.created_at %>"
                 data-type="<%= movie.type %>"
                 data-genres="<%= movie.genres %>"
                 data-title="<%= movie.title.toLowerCase() %>">
                <a href="/movies/<%= movie.id %>">
                    <img src="<%= movie.poster %>" alt="<%= movie.title %>">
                    <div class="rating-badge">
                        <i class="fas fa-star"></i>
                        <%= movie.avgRating ? movie.avgRating.toFixed(1) : '0.0' %>
                    </div>
                    <div class="watch-badge">
                        <i class="fas fa-eye"></i>
                        <%= formatCount(movie.watchCount || 0) %>
                    </div>
                    <div class="content-title"><%= movie.title %></div>
                </a>
            </div>
        <% }); %>
    </div>
</div>

<style>
.watch-badge {
    position: absolute;
    top: 0.5rem;
    left: 0.5rem;
    background: rgba(0, 0, 0, 0.8);
    color: var(--primary);
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-weight: bold;
    display: flex;
    align-items: center;
    gap: 0.25rem;
    min-width: 60px;
    justify-content: center;
}

.watch-badge i {
    font-size: 0.875rem;
}

.filter-select {
    background-color: var(--secondary);
    color: var(--primary);
    border: 1px solid var(--primary);
    padding: 0.75rem;
    border-radius: 4px;
    cursor: pointer;
    min-width: 150px;
}

.filter-select option {
    background-color: var(--secondary);
    color: var(--primary);
    padding: 0.5rem;
}

.filter-select:focus {
    outline: none;
    border-color: var(--primary);
    box-shadow: 0 0 0 2px rgba(255, 215, 0, 0.2);
}
</style>

<script>
const searchInput = document.getElementById('page-search-input');
const sortSelect = document.getElementById('sort-select');
const typeSelect = document.getElementById('type-select');
const genreSelect = document.getElementById('genre-select');
const contentGrid = document.querySelector('.content-grid');

function filterAndSortContent() {
    const searchTerm = searchInput.value.toLowerCase();
    const sortBy = sortSelect.value;
    const typeFilter = typeSelect.value;
    const genreFilter = genreSelect.value;
    
    const movies = Array.from(contentGrid.children);
    
    movies.forEach(movie => {
        const title = movie.dataset.title;
        const type = movie.dataset.type;
        const genres = JSON.parse(movie.dataset.genres || '[]');
        
        const matchesType = typeFilter === 'all' || type === typeFilter;
        const matchesGenre = genreFilter === 'all' || genres.includes(genreFilter);
        const matchesSearch = title.includes(searchTerm);
        
        const shouldShow = matchesSearch && matchesType && matchesGenre;
        movie.style.display = shouldShow ? '' : 'none';
    });
    
    const visibleMovies = movies.filter(movie => movie.style.display !== 'none');
    
    visibleMovies.sort((a, b) => {
        if (sortBy === 'latest') {
            return new Date(b.dataset.date) - new Date(a.dataset.date);
        } else if (sortBy === 'oldest') {
            return new Date(a.dataset.date) - new Date(b.dataset.date);
        } else if (sortBy === 'rating') {
            return parseFloat(b.dataset.rating) - parseFloat(a.dataset.rating);
        } else if (sortBy === 'views') {
            return parseInt(b.dataset.views) - parseInt(a.dataset.views);
        }
    });
    
    visibleMovies.forEach(movie => contentGrid.appendChild(movie));
}

searchInput.addEventListener('input', filterAndSortContent);
sortSelect.addEventListener('change', filterAndSortContent);
typeSelect.addEventListener('change', filterAndSortContent);
genreSelect.addEventListener('change', filterAndSortContent);
</script>

<%- include('../partials/footer') %>